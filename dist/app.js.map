{
  "version": 3,
  "sources": ["src/api/Construction.js", "src/maths/Vector2.js", "src/maths/Matrix3.js", "src/maths/Line.js", "src/maths/Segment.js", "src/maths/Circle.js", "src/maths/Rectangle.js", "src/maths/intersection.js", "src/maths/projection.js", "src/maths/distance.js", "src/maths/symmetry.js", "src/maths/index.js", "src/gui/graphics/drawing.js", "src/gui/graphics/Color.js", "src/gui/graphics/Style.js", "src/api/types.js", "src/objects/scalar.js", "src/objects/line.js", "src/objects/segment.js", "src/objects/point.js", "src/api/selection.js", "src/objects/circle.js", "src/objects/functionGraph.js", "src/objects/vector.js", "src/objects/polygon.js", "src/api/index.js", "src/gui/Stage.js", "src/utils/polyfills.js", "src/utils/Signal.js", "src/utils/Mouse.js", "src/gui/Mouse.js", "src/gui/commands/SelectOrCreatePoint.js", "src/gui/commands/CircleCenterPoint.js", "src/gui/commands/LinePointPoint.js", "src/gui/commands/DragPoint.js", "src/utils/Loop.js", "src/gui/commands/DragStage.js", "src/gui/commands/index.js", "src/gui/Tool.js", "src/gui/ToolsSelector.js", "src/gui/CompleteGui.js", "src/index.js"],
  "sourcesContent": ["export function updateObjects(objects, timeStamp){\n    for(let k in objects){\n        const obj = objects[k];\n        if(Array.isArray(obj)){\n            obj.forEach(obj => updateObjects(obj, timeStamp));\n        }\n        else if(obj.construction !== undefined){\n            obj.construction.update(timeStamp);\n        }\n    }\n}\n\nexport class Construction{\n    constructor(params){\n        this.description = params.description;\n        this.input = params.input;\n        this.output = params.output;\n        this.helpers = params.helpers;\n        this.updateFunction = params.update;\n\n        this.timeStamp = -1;\n        this.update();\n    }\n\n    update(timeStamp){\n        if(timeStamp === this.timeStamp){\n            return;\n        }\n        this.timeStamp = timeStamp;\n\n        updateObjects(this.input, timeStamp);\n        updateObjects(this.helpers, timeStamp);\n        this.updateFunction(this.input, this.output, this.helpers, timeStamp);\n    }\n}\n\nexport const defaultConstruction = new Construction({\n    input:{},\n    output:{},\n    description:\"free construction\",\n    update: function(input, output){}\n});\n", "import * as maths from \"./index\";\n\nlet pool = [];\n\nexport class Vector2{\n    static create(x = 0, y = 0){\n        if(pool.length > 0){\n            return pool.pop().set(x, y);\n        }\n        else return new Vector2(x, y);\n    }\n\n    static dist(v1, v2){\n        let dx = v2.x - v1.x;\n        let dy = v2.y - v1.y;\n        return Math.hypot(dx, dy);\n    }\n\n    static angle(v1, v2){\n        let ang1 = Math.atan2(v1.y, v1.x);\n        let ang2 = Math.atan2(v2.y, v2.x);\n        return ang1 + ang2;\n    }\n\n    static lerp(v1, v2, t){\n        return v1.clone().lerp(v2, t);\n    }\n\n    constructor(x, y){\n        this.set(x, y);\n    }\n\n    add(v){\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n    }\n\n    sub(v){\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n    }\n\n    multiplyScalar(s){\n        this.x *= s;\n        this.y *= s;\n        return this;\n    }\n\n    scale(sx, sy){\n        this.x *= sx;\n        this.y *= sy;\n        return this;\n    }\n\n    multiply(v){\n        this.x *= v.x;\n        this.y *= v.y;\n        return this;\n    }\n\n    divide(v){\n        this.x /= v.x;\n        this.y /= v.y;\n        return this;\n    }\n\n    lerp(v1, v2, t){\n        this.x = maths.lerp(v1.x, v2.x, t);\n        this.y = maths.lerp(v1.y, v2.y, t);\n        return this;\n    }\n\n    clone(){\n        return Vector2.create(this.x, this.y);\n    }\n\n    copy(v){\n        this.x = v.x;\n        this.y = v.y;\n        return this;\n    }\n\n    set(x = 0, y = 0){\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    normalize(){\n        return this.setLength(1);\n    }\n\n    setLength(l){\n        let r = l / this.getLength();\n        this.x *= r;\n        this.y *= r;\n        return this;\n    }\n\n    getLength(){\n        return Math.hypot(this.x, this.y);\n    }\n\n    dot(v){\n        return this.x * v.x + this.y * v.y;\n\n    }\n\n    cross(v){\n        return this.x * v.y - this.y * v.x;\n    }\n\n    rotate(a){\n        let ca = Math.cos(a);\n        let sa = Math.sin(a);\n        let x = this.x;\n        let y = this.y;\n        this.x = ca * x - sa * y;\n        this.y = ca * y + sa * x;\n        return this;\n    }\n\n    dispose(){\n        pool.push(this);\n    }\n\n    toString(){\n        return `[${this.x}, ${this.y}]`\n    }\n}\n\n\n", "//www.j3d.org/matrix_faq/matrfaq_latest.html\nexport default class Matrix3\n{\n  constructor(\n    a = 1, b = 0, c = 0,\n    d = 0, e = 1, f = 0,\n    g = 0, h = 0, i = 1)\n  {\n    this.data = new Float32Array(9);\n    this.set(\n      a, b, c,\n      d, e, f,\n      g, h, i);\n  }\n\n  identity() {\n    return this.set(\n      1, 0, 0,\n      0, 1, 0,\n      0, 0, 1\n    );\n  }\n\n  set(\n    a = 1, b = 0, c = 0,\n    d = 0, e = 1, f = 0,\n    g = 0, h = 0, i = 1)\n  {\n    var t = this.data;\n    t[0] = a; t[1] = b; t[2] = c;\n    t[3] = d; t[4] = e; t[5] = f;\n    t[6] = g; t[7] = h; t[8] = i;\n    return this;\n  }\n\n  copy(mat){\n    var t0 = this.data;\n    var t1 = mat.data;\n    t0[0] = t1[0]; t0[3] = t1[3]; t0[6] = t1[6];\n    t0[1] = t1[1]; t0[4] = t1[4]; t0[7] = t1[7];\n    t0[2] = t1[2]; t0[5] = t1[5]; t0[8] = t1[8];\n    return this;\n  }\n\n  transformVector2(v) {\n    var t = this.data;\n    var x = v.x, y = v.y;\n    v.x = t[0] * x + t[1] * y + t[2];\n    v.y = t[3] * x + t[4] * y + t[5];\n    v.z = t[6] * x + t[7] * y + t[8];\n    return this;\n  }\n\n  //m x this\n  multiplyMat(m) {\n    var t = m.data;\n    this.multiply(\n      t[0], t[1], t[2],\n      t[3], t[4], t[5],\n      t[6], t[7], t[8]\n    );\n    return this;\n  }\n\n  //m x this\n  multiply(\n    a, b, c,\n    d, e, f,\n    g, h, i)\n  {\n    var t = this.data;\n    return this.set(\n      a * t[0] + b * t[3] + c * t[6],\n      d * t[6] + e * t[3] + f * t[6],\n      g * t[6] + h * t[3] + i * t[6],\n\n      a * t[1] + b * t[4] + c * t[7],\n      d * t[1] + e * t[4] + f * t[7],\n      g * t[1] + h * t[4] + i * t[7],\n\n      a * t[2] + b * t[5] + c * t[8],\n      d * t[2] + e * t[5] + f * t[8],\n      g * t[2] + h * t[5] + i * t[8]);\n  }\n\n  get determinant() {\n    var t = this.data;\n    return (t[0] * (t[4] * t[8] - t[7] * t[5]) -\n            t[1] * (t[3] * t[8] - t[6] * t[5]) +\n            t[2] * (t[3] * t[7] - t[6] * t[4]));\n  }\n\n  invert() {\n    var det = this.determinant;\n    if(Math.abs(det) < 0.0005){\n      return this.identity();\n    }\n    var t = this.data;\n\n    var iDet = 1 / det;\n    return this.set(\n      (t[4] * t[8] - t[7] * t[5]) * iDet,\n     -(t[3] * t[8] - t[6] * t[5]) * iDet,\n      (t[3] * t[7] - t[6] * t[4]) * iDet,\n     -(t[1] * t[8] - t[7] * t[2]) * iDet,\n      (t[0] * t[8] - t[6] * t[2]) * iDet,\n     -(t[0] * t[7] - t[6] * t[1]) * iDet,\n      (t[1] * t[5] - t[4] * t[2]) * iDet,\n     -(t[0] * t[5] - t[3] * t[2]) * iDet,\n      (t[0] * t[4] - t[3] * t[1]) * iDet\n    );\n  }\n\n  transpose() {\n    var t = this.data;\n    return this.set(\n      t[0], t[3], t[6],\n      t[1], t[4], t[7],\n      t[2], t[5], t[8]\n    );\n  }\n\n  clone() {\n    var cloneMat = new Matrix3();\n    var t0 = this.data;\n    var t1 = cloneMat.data;\n    for(var i = 0; i < 9; i++) {\n      t1[i] = t0[i];\n    }\n    return cloneMat;\n  }\n\n  toString() {\n    var t = this.data;\n    return (`[Mat3\n      ${t[0]}, ${t[1]}, ${t[2]}\n      ${t[3]}, ${t[4]}, ${t[5]}\n      ${t[6]}, ${t[7]}, ${t[8]}\n    ]`);\n  }\n\n  valueOf() {\n    return this.data;\n  }\n}\n", "import * as maths from \"./index\";\n\nexport class Line{\n  constructor(point = new maths.Vector2(), vector = new maths.Vector2()){\n    this.point = point;\n    this.vector = vector;\n  }\n\n  getYFromX(x){\n    let t = (x - this.point.x) / this.vector.x;\n    return this.point.y + t * this.vector.y;\n  }\n\n  getXFromY(y){\n    let t = (y - this.point.y) / this.vector.y;\n    return this.point.x + t * this.vector.x;\n  }\n\n  getPointAt(t, v = new maths.Vector2){\n    return v.copy(this.vector)\n      .multiplyScalar(t)\n      .add(this.point);\n  }\n}\n", "import * as maths from \"./index\";\nexport class Segment{\n  constructor(p1 = new maths.Vector2(), p2 = new maths.Vector2()){\n    this.p1 = p1;\n    this.p2 = p2;\n  }\n}\n", "import * as maths from \"./index\";\n\nexport class Circle{\n  constructor(center, radius){\n    this.set(center, radius);\n  }\n\n  set(center = new maths.Vector2(), radius = 1){\n    this.center = center;\n    this.radius = radius;\n  }\n\n  copy(circle){\n    this.center.copy(circle.center);\n    this.radius = circle.radius;\n  }\n}\n", "import {Vector2} from \"./Vector2\";\n\nexport class Rectangle{\n    static makeArea(xMin, xMax, yMin, yMax){\n        return (new Rectangle()).setCorners(xMin, xMax, yMin, yMax);\n    }\n\n    constructor(x, y, width, height){\n        this.set(x, y, width, height);\n    }\n\n    set(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n\n    setCorners(xMin, xMax, yMin, yMax){\n        this.x = xMin;\n        this.y = yMin;\n        this.width = xMax - xMin;\n        this.height = yMax - yMin;\n        return this;\n    }\n\n    copy(rect){\n        this.x = rect.x;\n        this.y = rect.y;\n        this.width = rect.width;\n        this.height = rect.height;\n        return this;\n    }\n\n    clone(){\n        return (new Rectangle()).copy(this);\n    }\n}\n", "import * as maths from \"./index\";\n\nexport function linesIntersection(l1, l2, v = new maths.Vector2){\n  let xv1 = l1.vector.x;\n  let yv1 = l1.vector.y;\n  let xv2 = l2.vector.x;\n  let yv2 = l2.vector.y;\n  let dxp = l2.point.x - l1.point.x;\n  let dyp = l2.point.y - l1.point.y;\n\n  let t = (yv2 * dxp - xv2 * dyp) / (xv1 * yv2 - xv2 * yv1);\n\n  return l1.getPointAt(t, v);\n}\n\nexport function lineCircleIntersection(line, circle, v1 = new maths.Vector2(), v2 = new maths.Vector2()){\n  let v = line.vector;\n  let p = line.point;\n  let c = circle.center;\n  let r = circle.radius;\n\n  let roots = maths.quadraticRoots(\n    v.dot(v),\n    2 * (p.x * v.x + p.y * v.y - c.x * v.x - c.y * v.y),\n    c.dot(c) + p.dot(p) - 2 * (c.x * p.x + c.y * p.y) - r * r\n  );\n  line.getPointAt(roots.x1, v1);\n  line.getPointAt(roots.x2, v2);\n}\n\nexport function circlesIntersections(circle1, circle2, v1 = new maths.Vector2(), v2 = new maths.Vector2()){\n  let c1 = circle1.center;\n  let c2 = circle2.center;\n  let r1 = circle1.radius;\n  let r2 = circle2.radius;\n\n\n  let dx = c2.x - c1.x;\n  let dy = c2.y - c1.y;\n  let ddx = c2.x*c2.x - c1.x*c1.x;\n  let ddy = c2.y*c2.y - c1.y*c1.y;\n  let ddr = r1*r1 - r2*r2;\n\n  let s1 = dx / dy;\n  let s2 = (ddr + ddx + ddy) / dy;\n  let s3 = c1.y - s2/2;\n\n  let roots, f;\n  if(dy === 0){\n    let x = (ddx + ddr)/(2*dx);\n    let dx2 = c1.x - x;\n    roots = maths.quadraticRoots(\n      1,\n      -2 * c1.y,\n      c1.y*c1.y + dx2*dx2 - r1*r1\n    );\n    f = (v, y) => v.set(x, y);\n  }\n  else {\n    roots = maths.quadraticRoots(\n      1 + s1*s1,\n      2 * (s1*s3 - c1.x),\n      s3*s3 + c1.x*c1.x - r1*r1\n    );\n    f = (v, x) => v.set(x, s2/2 - s1*x);\n  }\n  if(c2.y > c1.y){\n    let t = roots.x1;\n    roots.x1 = roots.x2;\n    roots.x2 = t;\n  }\n  f(v1, roots.x1);\n  f(v2, roots.x2);\n  return {v1, v2};\n}\n", "import * as maths from \"./index\";\n\nexport function projectVectorOnCircle(vector, circle, result = new maths.Vector2()){\n  result.copy(vector).sub(circle.center).setLength(circle.radius).add(circle.center);\n  return result;\n}\n\nexport function projectVectorOnLine(vector, line){\n  let ab = line.vector.getLength();\n  let ac = maths.vectorsDistance(line.point, vector);\n  let bc = maths.vectorsDistance(line.point.clone().add(line.vector), vector);\n\n  let ai = -(bc * bc - ab * ab - ac * ac) / (2 * ab);\n  let result = line.vector.clone().setLength(ai).add(line.point);\n  vector.copy(result);\n  result.dispose();\n  return vector;\n}\n", "import * as maths from \"./index\";\n\nexport function vectorsDistance(v1, v2){\n  let dx = v2.x - v1.x;\n  let dy = v2.y - v1.y;\n  return Math.hypot(dx, dy);\n}\n\nexport function vectorLineDistance(vector, line){\n  let l2 = new maths.Line(vector, new maths.Vector2(-line.vector.y, line.vector.x));\n  let p = maths.linesIntersection(line, l2);\n  return vectorsDistance(vector, p);\n}\n\nexport function vectorCircleDistance(v, c){\n  return vectorsDistance(v, c.center) - c.radius;\n}\n\nexport function circlesDistance(c1, c2){\n  return vectorsDistance(c1.center, c2.center) - (c1.radius + c2.radius);\n}\n\nexport function lineCircleDistance(l, c){\n  return vectorLineDistance(c.center, l) - c.radius;\n}\n", "import * as maths from \"./index\";\n\nexport function pointAxialSymmetry(point, axis){\n  let tmp = point.clone();\n  pointCentralSymmetry(point, maths.projectVectorOnLine(tmp, axis));\n  tmp.dispose();\n  return point;\n}\n\nexport function pointCentralSymmetry(point, center){\n  point.x = 2 * center.x - point.x;\n  point.y = 2 * center.y - point.y;\n  return point;\n}\n\nexport function circleAxialSymmetry(circle, axis){\n  pointAxialSymmetry(circle.center, axis);\n}\n\nexport function circleCentralSymmetry(circle, center){\n  pointCentralSymmetry(circle.center, center);\n}\n", "export * from \"./Vector2\";\nexport * from \"./Matrix3\";\nexport * from \"./Line\";\nexport * from \"./Segment\";\nexport * from \"./Circle\";\nexport * from \"./Rectangle\";\nexport * from \"./intersection\";\nexport * from \"./projection\";\nexport * from \"./distance\";\nexport * from \"./symmetry\";\n\nexport function quadraticRoots(a, b, c){\n  let ds = Math.sqrt(b * b - 4 * a * c);\n  return {\n    x1: (-b - ds) / (2 * a),\n    x2: (-b + ds) / (2 * a)\n  };\n}\n\nexport function lerp(a, b, t){\n  return a + t * (b - a);\n}\n", "import {Vector2} from \"../../maths\";\n\nexport function drawPoint(stage, point){\n    const radius = 5;\n    const x = point.geom.x;\n    const y = point.geom.y;\n\n    const ctx = stage.ctx;\n\n    ctx.beginPath();\n    const s = stage.scale;\n    const t = stage.translation;\n    ctx.moveTo(t.x + x * s.x + radius, t.y + y * s.y);\n    ctx.arc(t.x + x * s.x, t.y + y * s.y, radius, 0, 2 * Math.PI);\n\n    const style = point.style;\n    ctx.save();\n    if(style.stroke!== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        if(style.dash !== undefined){\n            ctx.setLineDash(style.dash);\n        }\n        ctx.stroke();\n    }\n    if(style.fill !== undefined){\n        ctx.fillStyle = style.fill.toString();\n        ctx.fill();\n    }\n    ctx.restore();\n}\n\nexport function drawCircle(stage, circle){\n    const c = circle.geom.center;\n    const r = circle.geom.radius;\n\n    const ctx = stage.ctx;\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(stage.translation.x, stage.translation.y);\n    ctx.scale(stage.scale.x, stage.scale.y);\n    ctx.moveTo(c.x + r, c.y);\n    ctx.arc(c.x, c.y, r, 0, 2 * Math.PI);\n    ctx.restore();\n    ctx.save();\n\n    const style = circle.style;\n    if(style.stroke!== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        if(style.dash !== undefined){\n            ctx.setLineDash(style.dash);\n        }\n        ctx.stroke();\n    }\n    if(style.fill!== undefined){\n        ctx.fillStyle = style.fill.toString();\n        ctx.fill();\n    }\n    ctx.restore();\n}\n\nexport function drawSegment(stage, segment){\n    let ctx = stage.ctx;\n    let p1 = segment.geom.p1;\n    let p2 = segment.geom.p2;\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(stage.translation.x, stage.translation.y);\n    ctx.scale(stage.scale.x, stage.scale.y);\n    ctx.moveTo(p1.x, p1.y);\n    ctx.lineTo(p2.x, p2.y);\n    ctx.restore();\n\n    let style = segment.style;\n    ctx.save();\n    if(style.stroke!== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        ctx.stroke();\n        if(style.dash !== undefined){\n            ctx.setLineDash(style.dash);\n        }\n    }\n    ctx.restore();\n}\n\nexport function drawLine(stage, line){\n    let l = line.geom;\n    let ctx = stage.ctx;\n    ctx.beginPath();\n    let w = stage.window;\n    ctx.save();\n    ctx.translate(stage.translation.x, stage.translation.y);\n    ctx.scale(stage.scale.x, stage.scale.y);\n    if(l.vector.x === 0){\n        ctx.moveTo(l.point.x, w.y);\n        ctx.lineTo(l.point.x, w.y + w.height);\n    }\n    else {\n        ctx.moveTo(w.x, l.getYFromX(w.x));\n        ctx.lineTo(w.x + w.width, l.getYFromX(w.x + w.width));\n    }\n    ctx.restore();\n\n    let style = line.style;\n    ctx.save();\n    if(style.stroke !== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        if(style.dash !== undefined){\n            ctx.setLineDash(style.dash);\n        }\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n\nexport function drawVector(stage, vector){\n    let ctx = stage.ctx;\n    let p1 = vector.geom.p1;\n    let p2 = vector.geom.p2;\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(stage.translation.x, stage.translation.y);\n    ctx.scale(stage.scale.x, stage.scale.y);\n    ctx.moveTo(p1.x, p1.y);\n    ctx.lineTo(p2.x, p2.y);\n    ctx.restore();\n    let style = vector.style;\n    ctx.save();\n    if(style.stroke!== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        if(style.dash !== undefined){\n            ctx.setLineDash(style.dash);\n        }\n        ctx.stroke();\n    }\n    ctx.restore();\n\n\n    ctx.save();\n    ctx.translate(stage.translation.x, stage.translation.y);\n    ctx.scale(stage.scale.x, stage.scale.y);\n    let arrowLength = 5 / stage.scale.x;\n    let arrowWidth = 5 / stage.scale.x;\n    let end = p2;\n    let diff = p2.clone().sub(p1);\n\n    let length = diff.clone().setLength(arrowLength);\n    let width = diff.clone().setLength(arrowWidth);\n    let end2 = end.clone().sub(length);\n\n    ctx.moveTo(end.x, end.y);\n    ctx.lineTo(end2.x + width.y, end2.y - width.x);\n    ctx.moveTo(end.x, end.y);\n    ctx.lineTo(end2.x - width.y, end2.y + width.x);\n    ctx.restore();\n\n\n    ctx.save();\n    if(style.stroke!== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n\nexport function drawPolygon(stage, polygon){\n    let ctx = stage.ctx;\n    ctx.beginPath();\n    ctx.save();\n    ctx.translate(stage.translation.x, stage.translation.y);\n    ctx.scale(stage.scale.x, stage.scale.y);\n    let pts = polygon.geom;\n    let n = pts.length;\n    let p = pts[n - 1];\n    ctx.moveTo(p.x, p.y);\n    for(let i = 0; i < n; i++){\n        p = pts[i];\n        ctx.lineTo(p.x, p.y);\n    }\n    ctx.restore();\n\n    let style = polygon.style;\n    ctx.save();\n    if(style.stroke!== undefined){\n        ctx.strokeStyle = style.stroke.toString();\n        if(style.dash !== undefined){\n            ctx.setLineDash(style.dash);\n        }\n        ctx.stroke();\n    }\n    if(style.fill!== undefined){\n        ctx.fillStyle = style.fill.toString();\n        ctx.fill();\n    }\n    ctx.restore();\n}\n", "export default class Color{\n  constructor(h = 0, s = 0, l = 0, a = 1){\n    this.set(h, s, l, a);\n  }\n\n  set(h = 0, s = 0, l = 0, a = 1){\n    this.h = h;\n    this.s = s;\n    this.l = l;\n    this.a = a;\n  }\n\n  copy(color){\n    this.h = color.h;\n    this.s = color.s;\n    this.l = color.l;\n    this.a = color.a;\n  }\n\n  toString(){\n    let h = Math.round(this.h);\n    let s = Math.round(100 * this.s);\n    let l = Math.round(100 * this.l);\n    return `hsla(${h}, ${s}%, ${l}%, ${this.a})`;\n  }\n}\n", "import Color from \"./Color\";\n\nexport default class Style {\n  constructor(values){\n    this.set(values);\n  }\n\n  set(values){\n    if(values === undefined){\n      values = {};\n    }\n    this.fill = values.fill;\n    this.stroke = values.stroke;\n    this.dash = values.dash;\n    this.lineWidth = values.lineWidth;\n  }\n}\n\n", "\nexport const circleType = \"circle\";\nexport const lineType = \"line\";\nexport const pointType = \"point\";\nexport const polygonType = \"polygon\";\nexport const scalarType = \"scalar\";\nexport const segmentType = \"segment\";\nexport const vectorType = \"vector\";\n\nimport {Construction} from \"./Construction\";\n\nfunction initTypes(types){\n    return args => {\n        const params = Array.from(args);\n        const result = [];\n        if(types.length !== params.length){\n            return undefined;\n        }\n        for(let type of types){\n            let nextParam = undefined;\n            for(let i = 0; i < params.length; i++){\n                const param = params[i];\n                if(param.type === type){\n                    nextParam = param;\n                    params.splice(i, 1);\n                    break;\n                }\n            }\n            if(nextParam === undefined){\n                return undefined;\n            }\n            else{\n                result.push(nextParam);\n            }\n        }\n        return result;\n    }\n}\n\nexport function makeDispatch(...funcs){\n    return (...args) => {\n        let spreadParams = undefined;\n        let func = undefined;\n        for(let candidate of funcs){\n            spreadParams = candidate.spreadTypes(args);\n            if(spreadParams){\n                func = candidate;\n                break;\n            }\n        }\n        if(func){\n            return func(...spreadParams);\n        }\n        else{\n            console.error(`no match found for args ${args}`);\n            return undefined\n        }\n    }\n}\n\n\nexport function makeConstructor(description, types, init, update){\n    const spreadTypes = initTypes(types)\n    const constructor = function(...args){\n        const objects = init(...spreadTypes(args))\n        Object.assign(objects.output, {\n            ...objects.input,\n            construction:new Construction({\n                description,\n                ...objects,\n                update:update\n            })\n        })\n        return objects.output;\n    }\n    constructor.types = types;\n    constructor.spreadTypes = spreadTypes;\n    return constructor;\n}\n", "import {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\nexport function scalar(value){\n  return {\n    type:scalarType,\n    value:value.type === scalarType ? value.value : value\n  };\n}\n", "import {drawLine} from \"../gui/graphics/drawing\";\nimport Style from \"../gui/graphics/Style\";\nimport * as maths from \"../maths\";\n\nimport {Construction} from \"../api/Construction\";\nimport {scalar} from \"./scalar\";\nimport {point, pointOnPerpendicular} from \"./point\";\n\n\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\nexport function baseLine(){\n  return {\n    type:lineType,\n      style : new Style({stroke:\"black\"}),\n    drawingFunc : drawLine,\n    geom:new maths.Line()\n  };\n}\n\nexport function line(a, b){\n  if(a.type === pointType && b.type === pointType){\n    return lineFromPoints(a, b);\n  }\n  else if(a.type === pointType && b.type === vectorType){\n    return lineFromPointVector();\n  }\n\n  if(!Number.isNaN(a)){\n    a = scalar(a);\n  }\n  if(!Number.isNaN(b)){\n    b = scalar(b);\n  }\n\n  if(a.type === pointType && b.type === scalarType){\n    throw new Error(\"not implemented yet\");\n  }\n  else if(a.type === vectorType && b.type === scalarType){\n    throw new Error(\"not implemented yet\");\n  }\n  else if(a.type === scalarType && b.type === scalarType){\n    throw new Error(\"not implemented yet\");\n  }\n  else {\n    throw new Error(\"no line constructor for given params : \" + a + \", \" + b);\n  }\n}\n\n\nexport function lineFromPoints(p1, p2){\n  const line = baseLine();\n  line.construction = new Construction ({\n    description:\"line from points\",\n    input:{p1, p2},\n    output:line,\n    update : function(input, output) {\n      const l = output.geom;\n      l.point.copy(input.p1.geom);\n      l.vector.copy(input.p2.geom).sub(input.p1.geom);\n    }\n  });\n  return line;\n}\n\n\nexport function lineFromPointVector(point, vector){\n  const line = baseLine();\n  line.construction = new Construction({\n    description:\"line from (point, vector)\",\n    input:{point, vector},\n    output:line,\n    update : function(input, output){\n      output.geom.set(input.point.geom, input.vector.geom);\n    }\n  });\n  return line;\n}\n\n\nexport function perpendicular(line, point){\n  return lineFromPoints(point, pointOnPerpendicular(line, point));\n}\n\nexport function segmentBissector(segment){\n  const line = baseLine();\n  line.construction = new Construction({\n    description:\"segment bissector\",\n    input:{segment},\n    output:line,\n    update : function(input, output){\n      const p1 = input.segment.geom.p1;\n      const p2 = input.segment.geom.p2;\n      const line = output.geom;\n      line.point.lerp(p1, p2, 0.5);\n      line.vector.set(p1.y - p2.y, p2.x - p1.x);\n    }\n  });\n  return line;\n}\n\nexport function angleBissector(p1, p2, p3){\n    const line = baseLine();\n    const tmp = new maths.Vector2()\n    line.construction = new Construction({\n        description:\"angle bissector\",\n        input:{p1, p2, p3},\n        output:line,\n        update : function(input, output){\n            const p1 = input.p1.geom;\n            const p2 = input.p2.geom;\n            const p3 = input.p3.geom;\n            const len = maths.Vector2.dist(p2, p3)\n            tmp.copy(p1).sub(p2).setLength(len).add(p2);\n            tmp.lerp(tmp, p3, 0.5);\n\n            const line = output.geom;\n            line.point.copy(p2);\n            line.vector.copy(tmp).sub(p2).normalize();\n        }\n    });\n    return line;\n}\n", "import {drawSegment} from \"../gui/graphics/drawing\";\nimport Style from \"../gui/graphics/Style\";\nimport * as maths from \"../maths\";\n\nimport {Construction} from \"../api/Construction\";\n\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\nexport function baseSegment(){\n  return {\n    type : segmentType,\n    style : new Style({stroke:\"black\"}),\n    drawingFunc : drawSegment,\n    geom : new maths.Segment()\n  };\n}\n\nexport function segment(...params){\n  if(params.length === 1 && params[0].type === vectorType){\n    return segmentFromVector(params[0]);\n  }\n  else if(params[0].type === pointType && params[1].type === pointType){\n    return segmentFromPoints(params[0], params[1]);\n  }\n  else if(params[0].type === pointType && params[1].type === vectorType){\n    return segmentFromPointVector(params[0], params[1]);\n  }\n  else {\n    throw new Error(\"no line constructor for given params : \" + params.join(\", \"));\n  }\n}\n\n\nexport function segmentFromPoints(p1, p2){\n  const segment = baseSegment();\n  Object.assign(\n    segment,\n    {\n      construction:new Construction({\n        description:\"segment from points\",\n        input:{p1, p2},\n        output:segment,\n        update : function(input, output){\n          const s = output.geom;\n          s.p1.copy(input.p1.geom);\n          s.p2.copy(input.p2.geom);\n        }\n      })\n    }\n  );\n  return segment;\n}\n\nexport function segmentFromVector(vector){\n  const segment = baseSegment();\n  Object.assign(\n    segment,\n    {\n      construction:new Construction({\n        description:\"segment from vector\",\n        input:{vector},\n        output:segment,\n        update : function(input, output){\n          const s = output.geom;\n          s.p1.copy(input.vector.p1.geom);\n          s.p2.copy(input.vector.p2.geom);\n        }\n      })\n    }\n  );\n  return segment;\n}\n\nexport function segmentFromPointVector(point, vector){\n  const segment = baseSegment();\n  Object.assign(\n    segment,\n    {\n      construction:new Construction({\n        description:\"segment from point vector\",\n        input:{point, vector},\n        output:segment,\n        update : function(input, output){\n          const s = output.geom;\n          const p = input.point.geom;\n          s.copy(p);\n          s.copy(p).add(input.vector.geom);\n        }\n      })\n    }\n  );\n  return segment;\n}\n", "import {drawPoint} from \"../gui/graphics/drawing\";\nimport Style from \"../gui/graphics/Style\";\nimport * as maths from \"../maths\";\n\nimport {\n    Construction,\n    defaultConstruction\n} from \"../api/Construction\";\nimport {segmentBissector} from \"./line\"\nimport {segment} from \"./segment\"\n\n\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\nexport function basePoint(){\n  return {\n    type : pointType,\n    style : new Style({fill:\"black\"}),\n    drawingFunc : drawPoint,\n    geom : new maths.Vector2(),\n  };\n}\n\n\nexport function point(x, y){\n  const pt = basePoint();\n  pt.geom.set(x, y);\n  pt.construction = defaultConstruction;\n  return pt;\n}\n\n\nexport function randomPoint(area){\n  return point(\n    area.x + Math.random() * area.width,\n    area.y + Math.random() * area.height\n  );\n}\n\nexport function middle(segment){\n  const pt = basePoint();\n  pt.construction = new Construction({\n    description:\"segment middle\",\n    input:{segment},\n    output:pt,\n    update : function(input, output){\n      output.geom.lerp(input.segment.geom.p1, input.segment.geom.p2, 0.5);\n    }\n  });\n  return pt;\n}\n\n\nexport function pointOnPerpendicular(line, point){\n  const pt = basePoint();\n  pt.construction = new Construction({\n    description:\"point on perpendicular\",\n    input:{line, point},\n    output:pt,\n    update : function(input, output){\n      const pt = input.point.geom;\n      const v = input.line.geom.vector;\n      output.geom.set(pt.x - v.y, pt.y + v.y);\n    }\n  });\n  return pt;\n}\n\nexport function barycenter(pts, weights){\n    if(weights === undefined){\n        weights = pts.map(() => 1);\n    }\n    const pt = basePoint();\n    const tmp = new maths.Vector2();\n    pt.construction = new Construction({\n        description:\"barycenter\",\n        input:{pts, weights},\n        output:pt,\n        helpers:{},\n        update : function(input, output){\n            output.geom.set(0, 0);\n            input.pts.forEach((pt, i) => {\n                output.geom.add(tmp.copy(pt.geom).multiplyScalar(weights[i]));\n            })\n            output.geom.multiplyScalar(1 / weights.reduce((t, w) => t + w, 0));\n        }\n    });\n    return pt;\n}\n\n\nexport function circumCenter(p1, p2, p3){\n  const l1 = segmentBissector(segment(p1, p2));\n  const l2 = segmentBissector(segment(p1, p3));\n  const pt = basePoint();\n  pt.construction = new Construction({\n    description:\"circum center\",\n    input:{p1, p2, p3},\n    output:pt,\n    helpers:{l1, l2},\n    update : function(input, output, helpers){\n      maths.linesIntersection(helpers.l1.geom, helpers.l2.geom, output.geom);\n    }\n  });\n  return pt;\n}\n\n\nexport function lineCircleIntersections(line, circle){\n  const pts = [basePoint(), basePoint()];\n  const construction = new Construction({\n    description:\"line circle intersections\",\n    input:{line, circle},\n    output:pts,\n    update : function(input, output){\n      maths.lineCircleIntersection(input.line.geom, input.circle.geom, output[0].geom, output[1].geom);\n    }\n  });\n  pts[0].construction = pts[1].construction = construction;\n  return pts;\n}\n\n\nexport function circlesIntersections(c1, c2){\n  const pts = [basePoint(), basePoint()];\n  const construction = new Construction({\n    description:\"circles intersections\",\n    input:{c1, c2},\n    output:pts,\n    update : function(input, output){\n      maths.circlesIntersections(input.c1.geom, input.c2.geom, output[0].geom, output[1].geom);\n    }\n  });\n  pts[0].construction = pts[1].construction = construction;\n  return pts;\n}\n\n\nexport function linesIntersection(l1, l2){\n  const pt = basePoint();\n  pt.construction = new Construction({\n    description:\"lines intersection\",\n    input:{l1, l2},\n    output:pt,\n    update : function(input, output){\n      maths.linesIntersection(input.l1.geom, input.l2.geom, output.geom);\n    }\n  });\n  return pt;\n}\n\n/**\n * position:Vector2 only used at creation\n */\nexport function pointOnObject(obj, position){\n  switch(obj.type){\n  case pointType:\n    return obj;\n  case circleType:\n    return pointOnCircle(obj, position);\n  case lineType:\n    return pointOnLine(obj, position);\n  default :\n    throw new Error(\"no implementation for type : \" + obj.type);\n    break;\n  }\n}\n\nexport function pointOnLine(line, position){\n  const pt = basePoint();\n  pt.geom.copy(position);\n  pt.construction = new Construction({\n    description:\"point on line\",\n    input:{line},\n    output:pt,\n    update : function(input, output){\n      maths.projectVectorOnLine(output.geom, input.line.geom);\n    }\n  });\n  return pt;\n}\n\nexport function pointOnCircle(circle, position){\n  const pt = basePoint();\n  pt.geom.copy(position);\n  pt.construction = new Construction({\n    description:\"point on circle\",\n    input:{circle},\n    output:pt,\n    update : function(input, output){\n      maths.projectVectorOnCircle(output.geom, input.circle.geom, output.geom);\n    }\n  });\n  return pt;\n}\n\n\nexport function mouse(stage, mouse){\n  const pt = basePoint();\n  Object.assign(\n    pt,\n    {\n      selectable : false,\n      construction : new Construction({\n        description:\"mouse\",\n        input:{},\n        output:pt,\n        update : function(input, output){\n          output.geom.copy(mouse.position);\n        }\n      })\n    });\n  return pt;\n}\n\nexport function pointCentralSymmetry(point, center){\n  const pt = basePoint();\n  Object.assign(\n    pt,\n    {\n      construction : new Construction({\n        description:\"point central symmetry\",\n        input:{point, center},\n        output:pt,\n        update : function(input, output){\n          maths.pointCentralSymmetry(output.geom.copy(input.point.geom), center);\n        }\n      })\n    });\n  return pt;\n}\n\nexport function pointAxialSymmetry(point, axis){\n  const pt = basePoint();\n  Object.assign(\n    pt,\n    {\n      construction : new Construction({\n        description:\"point axial symmetry\",\n        input:{point, axis},\n        output:pt,\n        update : function(input, output){\n          maths.pointaxialSymmetry(output.geom.copy(input.point.geom), axis);\n        }\n      })\n    });\n  return pt;\n}\n", "import * as point from \"../objects/point\";\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\nimport * as maths from \"../maths\";\n\n\nexport function selectInCircle(objects, circle){\n  const result = [];\n  objects.forEach(object => {\n    if(object.selectable === false){\n      return;\n    }\n    if(Array.isArray(object)){\n      result.push(...selectInCircle(object, circle));\n    }\n    else {\n      let distance;\n      switch(object.type){\n        case pointType:\n            distance = maths.vectorsDistance(object.geom, circle.center);\n            break;\n        case lineType:\n            distance = maths.vectorLineDistance(circle.center, object.geom);\n            break;\n        case circleType:\n            distance = maths.vectorCircleDistance(circle.center, object.geom);\n            break;\n        default:\n            console.warn(\"type not handled : \" + object.type);\n            return;\n            break;\n      }\n      result.push({object, distance});\n    }\n  });\n  return result.filter(o => Math.abs(o.distance) < circle.radius);\n}\n", "import {drawCircle} from \"../gui/graphics/drawing\";\nimport Style from \"../gui/graphics/Style\";\nimport * as maths from \"../maths\";\n\nimport {Construction} from \"../api/Construction\";\nimport {scalar} from \"./scalar\";\nimport {circumCenter} from \"./point\";\n\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\n\nimport {makeConstructor, makeDispatch} from \"../api/types\";\n\nexport function baseCircle(){\n  return {\n    type:circleType,\n    style : new Style({stroke:\"black\"}),\n    drawingFunc : drawCircle,\n    geom:new maths.Circle()\n  };\n}\n\n// export function circle(...args){\n//   if(args.length === 3){\n//     return circumCircle(...args);\n//   }\n//   else if(args[1].type === pointType){\n//     return circleFromCenterPoint(...args);\n//   }\n//   else if(args[1].type !== scalarType){\n//     return circleFromCenterRadius(args[0], scalar(args[1]));\n//   }\n//   else {\n//     return circleFromCenterRadius(args[0], args[1]);\n//   }\n// }\n\n// export function circleFromCenterPoint(center, point){\n//   const circle = baseCircle();\n//   Object.assign(circle, {\n//     center,\n//     construction : new Construction({\n//       description:\"Circle from (center, point)\",\n//       input:{center, point},\n//       output:circle,\n//       update : function(input, output) {\n//         const c = output.geom;\n//         c.center.copy(input.center.geom);\n//         c.radius = maths.Vector2.dist(c.center, input.point.geom);\n//       }\n//     })\n//   });\n//   return circle;\n// }\n\n\n// export function circleFromCenterRadius(center, radius){\n//   const circle = baseCircle();\n//   radius = scalar(radius);\n//   Object.assign(circle, {\n//     center, radius,\n//     construction : new Construction({\n//       description:\"Circle from (center, radius)\",\n//       input : {center, radius},\n//       output : circle,\n//       update : function(input, output){\n//         const c = output.geom;\n//         c.center.copy(input.center.geom);\n//         c.radius = input.radius.value;\n//       }\n//     })\n//   });\n//   return circle;\n// }\n\n\n// export function circumCircle(p1, p2, p3){\n//   const circle = baseCircle();\n//   const center = circumCenter(p1, p2, p3);\n//   Object.assign(circle, {\n//     center,\n//     p1, p2, p3,\n//     construction : new Construction({\n//       description:\"circum circle\",\n//       input : {p1, p2, p3},\n//       output : circle,\n//       helpers : {center},\n//       update : function(input, output, helpers){\n//         const center = helpers.center;\n//         const circle = output.geom;\n//         circle.center.copy(center.geom);\n//         circle.radius = maths.Vector2.dist(center.geom, input.p1.geom);\n//       }\n//     })\n//   });\n//   return circle;\n// }\n\nexport function circleAxialSymmetry(c, axis){\n  const circle = baseCircle();\n  Object.assign(circle, {\n    construction : new Construction({\n      description:\"circle axial symmetry\",\n      input : {c, axis},\n      output : circle,\n      update : function(input, output){\n        output.geom.copy(input.c.geom);\n        maths.circleAxialSymmetry(output.geom, input.axis.geom);\n      }\n    })\n  });\n  return circle;\n}\n\nexport function circleCentralSymmetry(c, center){\n  const circle = baseCircle();\n  Object.assign(circle, {\n    construction : new Construction({\n      description:\"circle central symmetry\",\n      input : {c, center},\n      output : circle,\n      update : function(input, output){\n        output.geom.copy(input.c.geom);\n        maths.circleCentralSymmetry(output.geom, input.center.geom);\n      }\n    })\n  });\n  return circle;\n}\n\n\nexport const circumCircle = makeConstructor(\n    \"circum circle\",\n    [pointType, pointType, pointType],\n    (p1, p2, p3) => ({\n        input:{p1, p2, p3},\n        helpers:{center:circumCenter(p1, p2, p3)},\n        output : baseCircle(),\n    }),\n    (input, output, helpers) => {\n        const center = helpers.center;\n        const circle = output.geom;\n        circle.center.copy(center.geom);\n        circle.radius = maths.Vector2.dist(center.geom, input.p1.geom);\n    }\n)\n\nexport const circleFromCenterPoint = makeConstructor(\n    \"Circle from (center, point)\",\n    [pointType, pointType],\n    (center, point) => ({\n        input:{center, point},\n        output : baseCircle(),\n    }),\n    (input, output) => {\n        const c = output.geom;\n        c.center.copy(input.center.geom);\n        c.radius = maths.Vector2.dist(c.center, input.point.geom);\n    }\n)\n\n\nexport const circleFromCenterRadius = makeConstructor(\n    \"Circle from (center, radius)\",\n    [pointType, scalarType],\n    (center, radius) => ({\n        input:{\n            center,\n            radius:scalar(radius)\n        },\n        output : baseCircle(),\n    }),\n    (input, output) => {\n        const c = output.geom;\n        c.center.copy(input.center.geom);\n        c.radius = input.radius.value;\n    }\n)\n\n// export const circleFromCenterRadius = makeConstructor(\n//     [pointType, scalarType],\n//     (center, radius) => {\n//         return new Construction({\n//             description: \"Circle from (center, radius)\",\n//             input:{\n//                 center,\n//                 radius:scalar(radius)\n//             },\n//             output : baseCircle(),\n//             update:(input, output) => {\n//                 const c = output.geom;\n//                 c.center.copy(input.center.geom);\n//                 c.radius = input.radius.value;\n//             }\n//         })\n//     },\n// )\n\n\nexport const circle = makeDispatch(\n    circumCircle,\n    circleFromCenterPoint,\n    circleFromCenterRadius,\n)\n", "", "import {drawVector} from \"../gui/graphics/drawing\";\nimport Style from \"../gui/graphics/Style\";\nimport * as maths from \"../maths\";\n\nimport {Construction} from \"../api/Construction\";\n\n\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\nexport function baseVector(){\n  return {\n    type : vectorType,\n    style : new Style({stroke:\"black\"}),\n    drawingFunc : drawVector,\n    geom : new maths.Segment()\n  };\n}\n\nexport function vector(p1, p2){\n  const vector = baseVector();\n  vector.construction = new Construction({\n    input:{p1, p2},\n    output:vector,\n    update(input, output){\n      const s = output.geom;\n      s.p1.copy(input.p1.geom);\n      s.p2.copy(input.p2.geom);\n    }\n  });\n  return vector;\n}\n", "import {drawPolygon} from \"../gui/graphics/drawing\";\nimport Style from \"../gui/graphics/Style\";\nimport * as maths from \"../maths\";\nimport {basePoint} from \"./point\"\n\nimport {\n    defaultConstruction,\n    Construction\n} from \"../api/Construction\";\n\nimport {\n    circleType,\n    lineType,\n    pointType,\n    polygonType,\n    scalarType,\n    segmentType,\n    vectorType,\n} from \"../api/types\";\n\nexport function basePolygon(pts){\n  return {\n    type : polygonType,\n    style : new Style({stroke:\"black\"}),\n    drawingFunc : drawPolygon,\n    geom : pts\n  };\n}\n\n\nexport function polygon(...pts){\n  if(Array.isArray(pts[0])){\n    pts = pts[0];\n  }\n  if(pts[0].type === pointType){\n    pts = pts.map(p => p.geom);\n  }\n  const poly = basePolygon(pts);\n  poly.construction = defaultConstruction;\n  return poly;\n}\n\nexport function regularPolygon(center, vertex, sides){\n    const pts = [vertex.geom];\n    for(let i = 0; i < sides - 1; i++){\n        pts.push(new maths.Vector2())\n    }\n    const polygon = basePolygon(pts);\n    Object.assign(polygon, {\n        construction : new Construction({\n            description:\"regular polygon\",\n            input : {center, vertex, sides},\n            output : polygon,\n            update : function(src, result){\n                const diff = vertex.geom.clone().sub(center.geom);\n                const radius = diff.getLength();\n                const angBegin = Math.atan2(diff.y, diff.x);\n                result.geom.forEach((pt, i) => {\n                    if(i === 0) return\n                    const ang = angBegin + i * 2 * Math.PI / sides\n                    pt.x = Math.cos(ang);\n                    pt.y = Math.sin(ang);\n                    pt.multiplyScalar(radius).add(center.geom)\n                });\n            }\n        })\n    });\n    return polygon;\n}\n", "export * from \"./Construction\";\nexport * from \"./selection\";\n\nexport * from \"../objects/point\";\nexport * from \"../objects/line\";\nexport * from \"../objects/circle\";\nexport * from \"../objects/segment\";\nexport * from \"../objects/functionGraph\";\nexport * from \"../objects/scalar\";\nexport * from \"../objects/vector\";\nexport * from \"../objects/polygon\";\n\n\n", "import * as maths from \"../maths\";\n\nexport class Stage {\n    constructor(canvas, params){\n\n        const props = Object.assign({\n            window : maths.Rectangle.makeArea(-1.2, 1.2, 1.2, -1.2)\n        }, params);\n\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.window = props.window;\n\n        this.scale = new maths.Vector2(1, 1);\n        this.translation = new maths.Vector2();\n        this.computeTransform();\n\n        this.items = [];\n    }\n\n    clear(){\n        this.ctx.clearRect(0, 0, this.width, this.height);\n    }\n\n    add(...items){\n        items.forEach(item => {\n            if(this.items.indexOf(item) !== -1){\n                return;\n            }\n            this.items.push(item);\n        });\n    }\n\n    remove(...items){\n        items.forEach(item => {\n            const id = this.items.indexOf(item);\n            if(id !== -1){\n                this.items.splice(id, 1);\n            }\n        });\n    }\n\n    computeTransform(){\n        const sx = this.width / this.window.width;\n        const sy = this.height / this.window.height;\n\n        this.scale.set(sx, sy);\n        this.translation.set(\n            -this.window.x * this.scale.x,\n            -this.window.y * this.scale.y\n        );\n    }\n\n\n    _drawItems(items, frameId){\n        items.forEach(item => {\n            if(Array.isArray(item)){\n                this._drawItems(item, frameId);\n            }\n            else {\n                item.construction.update(frameId);\n                item.drawingFunc(this, item);\n            }\n        });\n    }\n\n    domToWindowCoords(v){\n        return v.sub(this.translation).divide(this.scale);\n    }\n\n    windowToDomCoords(v, result = new maths.Vector2()){\n        return v.multiply(this.scale).sub(this.translation);\n    }\n\n    draw(frameId){\n        this.computeTransform();\n\n        this._drawItems(this.items, frameId);\n    }\n\n    get width(){ return this.canvas.width; }\n\n    get height(){ return this.canvas.height; }\n}\n", "window.requestAnimationFrame = window.requestAnimationFrame || \n              window.mozRequestAnimationFrame ||\n              window.webkitRequestAnimationFrame || \n              window.msRequestAnimationFrame || \n              function(fn){return setTimeout(fn, 50/3);};\n\n\n\nwindow.cancelAnimationFrame = window.cancelAnimationFrame || \n               window.mozCancelAnimationFrame || \n               window.webkitCancelAnimationFrame || \n               function(id){clearTimeout(id);};\n\n\n\n\nif(!Function.prototype.bind)\n{\n  console.log(\"prototo\");\n  Function.prototype.bind = function(scope) \n  {\n    if(!method) throw new Error(\"no method specified\");\n    var args = Array.prototype.slice.call(arguments, 2);\n    return function() \n    {\n        var params = Array.prototype.slice.call(arguments);\n        method.apply(scope, params.concat(args));\n      };\n  };\n}\n\n\n\nif(window.console === undefined || console.log === undefined) {\n  window.console = {\n    log:function(){}\n  };\n}\n\n\nexport default {};\n", "import \"./polyfills\";\n\nclass Listener {\n  constructor(signal, callback, scope, args) {\n    this.callback = callback;\n    this.scope = scope;\n    this.args = args;\n    this.once = false;\n    this.executed = false;\n  }\n\n  exec(args) {\n    this.callback.apply(this.scope, args.concat(this.args));\n  }\n}\n\n\nexport default class Signal {\n  constructor() {\n    this.listeners = [];\n  }\n\n  add(callback, scope) {\n    if(callback === undefined){\n      throw new Error(\"no callback specified\");\n    }\n    let n = this.listeners.length;\n    for(let i = 0; i < n; i++){\n      let listener = this.listeners[i];\n      if(listener.callback === callback && listener. scope === scope){\n        return listener;\n      }\n    }\n    let args = Array.prototype.slice.call(arguments, 2);\n    let listener = new Listener(this, callback, scope, args);\n    this.listeners.unshift(listener);\n    return listener;\n  }\n\n  addOnce(callback, scope) {\n    let listener = this.add.apply(this, arguments);\n    listener.once = true;\n    return listener;\n  }\n\n  remove(callback, scope) {\n    let n = this.listeners.length;\n    for(let i = 0; i < n; i++) {\n      let listener = this.listeners[i];\n      if(listener.callback == callback && listener.scope == scope) {\n        this.listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  removeListener(listener) {\n    let id = this.listeners.indexOf(listener);\n    if(id !== -1){\n      this.listeners.splice(id, 1);\n    }\n  }\n\n  dispatch() {\n    let args = Array.prototype.slice.call(arguments);\n    let i = this.listeners.length;\n    while(i--) {\n      let listener = this.listeners[i];\n      if(listener === undefined || listener.executed){\n        continue;\n      }\n      if(listener.once) {\n        this.listeners.splice(i, 1);\n      }\n      listener.exec(args);\n      listener.executed = true;\n    }\n\n    i = this.listeners.length;\n    while(i--){\n      let listener = this.listeners[i];\n      if(listener === undefined){\n        this.listeners.splice(i, 1);\n      }\n      else {\n        listener.executed = false;\n      }\n    }\n  }\n\n  dispose() {\n    this.listeners = [];\n  }\n}\n", "import Signal from \"../utils/Signal\";\n\nfunction getNumericStyleProperty(style, prop) {\n  return parseInt(style.getPropertyValue(prop), 10);\n}\n\nfunction elementPosition(e) {\n  var x = 0, y = 0;\n  var inner = true ;\n  do {\n    x += e.offsetLeft;\n    y += e.offsetTop;\n    var style = window.getComputedStyle(e,null) ;\n    var borderTop = getNumericStyleProperty(style,\"border-top-width\") ;\n    var borderLeft = getNumericStyleProperty(style,\"border-left-width\") ;\n    y += borderTop ;\n    x += borderLeft ;\n    if (inner) {\n      var paddingTop = getNumericStyleProperty(style,\"padding-top\") ;\n      var paddingLeft = getNumericStyleProperty(style,\"padding-left\") ;\n      y += paddingTop ;\n      x += paddingLeft ;\n    }\n    inner = false ;\n  } while (Boolean(e = e.offsetParent));\n  return { x: x, y: y };\n}\n\nexport default class Mouse {\n  constructor(target) {\n    this.x = this.y = 0;\n    this.isDown = false;\n    this.isRightDown = false;\n    this.target = target || document;\n\n    this.onDown = new Signal();\n    this.onUp = new Signal();\n    this.onDrag = new Signal();\n\n    this.onMiddleDown = new Signal();\n    this.onMiddleDrag = new Signal();\n    this.onMiddleUp = new Signal();\n\n    this.onRightDown = new Signal();\n    this.onRightDrag = new Signal();\n    this.onRightUp = new Signal();\n\n    this.onMove = new Signal();\n    this.onWheel = new Signal();\n\n    this._moveBind = this._onMouseMove.bind(this);\n    this._downBind = this._onMouseDown.bind(this);\n    this._upBind = this._onMouseUp.bind(this);\n    this._wheelBind = this._onMouseWheel.bind(this);\n    this._contextBind = (e) => {e.preventDefault(); return false;};\n    this._enabled = false;\n    this.enable();\n  }\n\n  enable() {\n    if(this._enabled){\n      return;\n    }\n    this.target.addEventListener(\"mousemove\", this._moveBind);\n    this.target.addEventListener(\"mousedown\", this._downBind);\n    this.target.addEventListener(\"mouseup\", this._upBind);\n    this.target.addEventListener(\"mousewheel\", this._wheelBind);\n    this.target.addEventListener(\"DOMMouseScroll\", this._wheelBind);\n    this.target.addEventListener(\"contextmenu\", this._contextBind);\n    this._enabled = true;\n  }\n\n  disable() {\n    this.target.removeEventListener(\"mousemove\", this._moveBind);\n    this.target.removeEventListener(\"mousedown\", this._downBind);\n    this.target.removeEventListener(\"mouseup\", this._upBind);\n    this.target.removeEventListener(\"mousewheel\", this._wheelBind);\n    this.target.removeEventListener(\"DOMMouseScroll\", this._wheelBind);\n    this.target.removeEventListener(\"contextmenu\", this._contextBind);\n    this._enabled = false;\n  }\n\n  _onMouseMove(e) {\n    var p = elementPosition(this.target);\n    this.x = e.pageX - p.x;\n    this.y = e.pageY - p.y;\n    this.onMove.dispatch();\n    if(this.isDown){\n      this.onDrag.dispatch();\n    }\n    if(this.isMiddleDown){\n      this.onMiddleDrag.dispatch();\n    }\n    if(this.isRightDown){\n      this.onRightDrag.dispatch();\n    }\n  }\n\n  _onMouseDown(e) {\n    switch(e.which){\n      case 1:\n        this.isDown = true;\n        this.onDown.dispatch();\n        break;\n      case 2:\n        this.isMiddleDown = true;\n        this.onMiddleDown.dispatch();\n        break;\n      case 3:\n        this.isRightDown = true;\n        this.onRightDown.dispatch();\n        break;\n    }\n    return false;\n  }\n\n  _onMouseUp(e) {\n    switch(e.which){\n      case 1:\n        this.isDown = false;\n        this.onUp.dispatch();\n        break;\n      case 2:\n        this.isMiddleDown = false;\n        this.onMiddleUp.dispatch();\n        break;\n      case 3:\n        this.isRightDown = false;\n        this.onRightUp.dispatch();\n        break;\n    }\n    return false;\n  }\n\n  _onMouseWheel(event) {\n    let delta = 0;\n\t\tif ( event.wheelDelta !== undefined ) {\n\t\t\tdelta = event.wheelDelta;\n\t\t} else if ( event.detail !== undefined ) {\n\t\t\tdelta = - event.detail;\n\t\t}\n    this.onWheel.dispatch(delta);\n  }\n\n  point(pt) {\n    pt = pt || {};\n    pt.x = this.x;\n    pt.y = this.y;\n    return pt;\n  }\n\n  setCursor(type = \"default\") {\n    this.target.style.cursor = type;\n  }\n\n  dispose() {\n    this.onDown.dispose();\n    this.onUp.dispose();\n    this.onMove.dispose();\n\n    this.onMiddleDown.dispose();\n    this.onMiddleUp.dispose();\n    this.onMiddleMove.dispose();\n\n    this.onRightDown.dispose();\n    this.onRightUp.dispose();\n    this.onRightMove.dispose();\n\n    this.disable();\n  }\n}\n", "import MouseInput from \"../utils/Mouse\";\nimport {Vector2} from \"../maths\";\n\nexport default class Mouse{\n  constructor(stage){\n    this.stage = stage;\n    this.mouseInput = new MouseInput(this.stage.canvas);\n\n    let mi = this.mouseInput;\n    this.onDown = mi.onDown;\n    this.onUp = mi.onUp;\n    this.onDrag = mi.onDrag;\n\n    this.onMiddleDown = mi.onMiddleDown;\n    this.onMiddleDrag = mi.onMiddleDrag;\n    this.onMiddleUp = mi.onMiddleUp;\n\n    this.onRightDown = mi.onRightDown;\n    this.onRightDrag = mi.onRightDrag;\n    this.onRightUp = mi.onRightUp;\n\n    this.onMove = mi.onMove;\n    this.onWheel = mi.onWheel;\n\n    this.position = new Vector2();\n    this.enable();\n  }\n\n    enable(){\n        this.onMove.add(this.updatePosition, this);\n    }\n\n    disable(){\n        this.onMove.remove(this.updatePosition, this);\n    }\n\n    updatePosition(){\n        this.stage.domToWindowCoords(this.position.copy(this.mouseInput));\n    }\n\n\n    get x (){return this.position.x;}\n    get y (){return this.position.y;}\n\n}\n", "import * as api from \"../../api\";\nimport * as maths from \"../../maths\";\n\nimport Signal from \"../../utils/Signal\";\n\nexport class SelectOrCreatePoint{\n  constructor(stage, mouse){\n    this.stage = stage;\n    this.mouse = mouse;\n    this.selectionCircle = new maths.Circle(undefined, 5);\n    this.completed = new Signal();\n  }\n\n  enable(){\n    this.mouse.onUp.add(this.onClick, this);\n  }\n\n  disable(){\n    this.mouse.onUp.remove(this.onClick, this);\n  }\n\n  onClick(){\n    this.selectionCircle.center.copy(this.mouse);\n    this.selectionCircle.radius = 10 / Math.abs(this.stage.scale.x);\n\n    let selection = api.selectInCircle(this.stage.items, this.selectionCircle);\n    if(selection.length === 0){\n      this.point = api.point(this.selectionCircle.center.x, this.selectionCircle.center.y);\n      this.pointCreated = true;\n    }\n    else {\n      let points = selection.filter(item => item.object.type === api.pointType);\n      if(points.length > 0){\n        selection = points;\n      }\n\n      selection.sort((a, b) => Math.abs(b.distance) - Math.abs(a.distance));\n      let closestObject = selection[0].object;\n      this.point = api.pointOnObject(closestObject, this.selectionCircle.center);\n      this.pointCreated = closestObject.type !== api.pointType;\n    }\n\n    if(this.pointCreated){\n      this.stage.add(this.point);\n    }\n    this.completed.dispatch(this.point, this.pointCreated);\n  }\n\n  cancel(){\n    \n  }\n\n  undo(){\n    if(this.pointCreated){\n      this.stage.remove(this.point);\n    }\n  }\n\n  redo(){\n    if(this.pointCreated){\n      this.stage.add(this.point);\n    }\n  }\n}\n", "import Signal from \"../../utils/Signal\";\nimport {SelectOrCreatePoint} from \"./SelectOrCreatePoint\";\nimport * as api from \"../../api\";\n\nexport class CircleCenterPoint{\n  constructor(stage, mouse){\n    this.completed = new Signal();\n    this.stage = stage;\n    this.mouse = mouse;\n  }\n\n  enable(){\n    this.centerCommand = new SelectOrCreatePoint(this.stage, this.mouse);\n    this.centerCommand.enable();\n    this.centerCommand.completed.add(this.onCenter, this);\n    this.pointCommand = this.centerCommand;\n  }\n\n  disable(){\n    this.centerCommand.completed.remove(this.onCenter, this);\n    if(this.pointCommand){\n      this.pointCommand.completed.remove(this.onPoint, this);\n    }\n    this.pointCommand.disable();\n  }\n\n  onCenter(center){\n    this.center = center;\n    this.pointTemp = api.mouse(this.stage, this.mouse);\n    this.circle = api.circle(this.center, this.pointTemp);\n    this.circle.selectable = false;\n    this.center.selectable = false;\n    this.pointTemp.selectable = false;\n    this.stage.add(this.circle);\n    this.stage.add(this.pointTemp);\n\n    this.centerCommand.completed.remove(this.onCenter, this);\n    this.centerCommand.disable();\n\n    this.pointCommand = new SelectOrCreatePoint(this.stage, this.mouse);\n    this.pointCommand.enable();\n    this.pointCommand.completed.add(this.onPoint, this);\n    this.pointCommand = this.pointCommand;\n  }\n\n  onPoint(point){\n    this.point = point;\n\n    this.pointCommand.completed.remove(this.onCenter, this);\n    this.pointCommand.disable();\n\n    this.circle.construction.src.point = this.point;\n    this.circle.selectable = true;\n    this.center.selectable = true;\n    this.point.selectable = true;\n    this.stage.remove(this.pointTemp);\n\n    this.completed.dispatch(this.circle);\n  }\n\n  cancel(){\n    if(this.center){\n      this.centerCommand.undo();\n      this.stage.remove(this.circle);\n      this.pointCommand.completed.remove(this.onCenter, this);\n      this.pointCommand.disable();\n    }\n  }\n\n  undo(){\n    this.centerCommand.undo();\n    this.pointCommand.undo();\n    this.stage.remove(this.circle);\n  }\n\n  redo(){\n    this.centerCommand.redo();\n    this.pointCommand.redo();\n    this.stage.add(this.line);\n  }\n}\n", "import Signal from \"../../utils/Signal\";\nimport {SelectOrCreatePoint} from \"./SelectOrCreatePoint\";\nimport * as api from \"../../api\";\n\nexport class LinePointPoint{\n  constructor(stage, mouse){\n    this.completed = new Signal();\n    this.stage = stage;\n    this.mouse = mouse;\n  }\n\n  enable(){\n    this.p1Command = new SelectOrCreatePoint(this.stage, this.mouse);\n    this.p1Command.enable();\n    this.p1Command.completed.add(this.onP1, this);\n    this.pointCommand = this.p1Command;\n  }\n\n  disable(){\n    this.p1Command.completed.remove(this.onP1, this);\n    if(this.p2Command){\n      this.p2Command.completed.remove(this.onP2, this);\n    }\n    this.pointCommand.disable();\n  }\n\n  onP1(p1){\n    this.p1 = p1;\n    this.p2Temp = api.mouse(this.stage, this.mouse);\n    this.line = api.line(this.p1, this.p2Temp);\n    this.line.selectable = false;\n    this.p1.selectable = false;\n    this.p2Temp.selectable = false;\n    this.stage.add(this.line);\n    this.stage.add(this.p2Temp);\n\n    this.p1Command.completed.remove(this.onP1, this);\n    this.p1Command.disable();\n\n    this.p2Command = new SelectOrCreatePoint(this.stage, this.mouse);\n    this.p2Command.enable();\n    this.p2Command.completed.add(this.onP2, this);\n    this.pointCommand = this.p2Command;\n  }\n\n  onP2(p2){\n    this.p2 = p2;\n\n\n    this.p2Command.completed.remove(this.onP1, this);\n    this.p2Command.disable();\n\n    this.line.construction.src.p2 = this.p2;\n    this.line.selectable = true;\n    this.p1.selectable = true;\n    this.p2.selectable = true;\n    this.stage.remove(this.p2Temp);\n\n    this.completed.dispatch(this.line);\n  }\n\n  cancel(){\n    if(this.p1){\n      this.p1Command.undo();\n      this.stage.remove(this.line);\n      this.p2Command.completed.remove(this.onP1, this);\n      this.p2Command.disable();\n    }\n  }\n\n  undo(){\n    this.p1Command.undo();\n    this.p2Command.undo();\n    this.stage.remove(this.line);\n  }\n\n  redo(){\n    this.p1Command.redo();\n    this.p2Command.redo();\n    this.stage.add(this.line);\n  }\n}\n", "import * as api from \"../../api\";\nimport * as maths from \"../../maths\";\n\nimport Signal from \"../../utils/Signal\";\n\nexport class DragPoint{\n  constructor(stage, mouse){\n    this.stage = stage;\n    this.mouse = mouse;\n    this.selectionCircle = new maths.Circle(undefined, 5);\n    this.completed = new Signal();\n\n    this.originalPos = new maths.Vector2();\n    this.resultPos = new maths.Vector2();\n    this.target = undefined;\n\n  }\n\n  enable(){\n    this.mouse.onDown.add(this.onDown, this);\n  }\n\n  disable(){\n    this.mouse.onDown.remove(this.onDown, this);\n    this.mouse.onUp.remove(this.onUp, this);\n    this.mouse.onMove.remove(this.onMove, this);\n  }\n\n  onDown(){\n    this.selectionCircle.center.copy(this.mouse);\n    this.selectionCircle.radius = 10 / Math.abs(this.stage.scale.x);\n\n    let points = api.selectInCircle(this.stage.items, this.selectionCircle)\n        .filter(item => {\n          let isPoint = item.object.type === api.pointType;\n          let isDraggable = item.construction !== api.defaultConstruction;\n          return isPoint && isDraggable;\n        });\n    points.sort((a, b) => Math.abs(b.distance) - Math.abs(a.distance));\n    if(points.length > 0){\n      this.startDrag(points[0].object);\n    }\n  }\n\n  startDrag(target){\n    this.target = target;\n\n    this.originalPos.copy(this.target.geom);\n    this.mouse.onMove.add(this.onMove, this);\n    this.mouse.onUp.add(this.onUp, this);\n  }\n\n  onUp(){\n    this.resultPos.copy(this.target.geom);\n    this.mouse.onMove.remove(this.onMove, this);\n    this.mouse.onUp.remove(this.onUp, this);\n    this.completed.dispatch();\n  }\n\n  onMove(){\n    this.target.geom.copy(this.mouse);\n  }\n\n  cancel(){\n  }\n\n  undo(){\n    this.target.geom.copy(this.originalPos);\n  }\n\n  redo(){\n    this.target.geom.copy(this.resultPos);\n  }\n}\n", "import Signal from \"./Signal\";\nimport \"./polyfills\";\n\n\nexport default class Loop {\n  constructor(callback, scope, autoPlay) {\n    this.onUpdate = new Signal();\n    this.isPaused = true;\n    this.frameId = 0;\n    if(callback) {\n      this.onUpdate.add(callback, scope);\n      if(autoPlay || autoPlay === undefined) {\n        this.play();\n      }\n    }\n  }\n\n  play() {\n    if(!this.isPaused) return;\n    this.isPaused = false;\n    this._onUpdate();\n  }\n\n  _onUpdate() {\n    //can cause the loop to be paused\n    this.onUpdate.dispatch(this.frameId);\n    if(!this.isPaused) {\n      this._requestFrame = requestAnimationFrame(this._onUpdate.bind(this));\n    }\n    this.frameId++;\n  }\n\n  pause() {\n    this.isPaused = true;\n    cancelAnimationFrame(this._requestFrame);\n  }\n\n  dispose() {\n    this.onUpdate.dispose();\n    this.pause();\n  }\n}\n", "import Loop from \"../../utils/Loop\";\nimport Signal from \"../../utils/Signal\";\n\nimport * as api from \"../../api\";\nimport * as maths from \"../../maths\";\n\nexport class DragStage{\n  constructor(stage, mouse) {\n    this.completed = new Signal();\n\n    this.stage = stage;\n    this.window = this.stage.window;\n    this.mouse = mouse;\n\n    this.mouseLastPos = new maths.Vector2();\n    this.mouseBeginPos = new maths.Vector2();\n    this.windowBeginPos = new maths.Vector2();\n\n    this.friction = 0.9;\n    this.vel = new maths.Vector2();\n\n    this.moveLoop = new Loop(this.onMoveRelease, this, false);\n  }\n\n  startDrag() {\n    this.moveLoop.pause();\n    this.mouse.onMove.add(this.onDrag, this);\n\n    this.mouseLastPos.copy(this.mouse.mouseInput);\n    this.mouseBeginPos.copy(this.mouse.mouseInput);\n    this.windowBeginPos.copy(this.window);\n\n    this.mouse.mouseInput.setCursor(\"grabbing\");\n  }\n\n  stopDrag() {\n    this.mouse.onMove.remove(this.onDrag, this);\n    this.mouse.mouseInput.setCursor(\"grab\");\n    this.moveLoop.play();\n  }\n\n  onDrag() {\n    let tmp = maths.Vector2.create();\n    let mouseDiff = tmp.copy(this.mouse.mouseInput)\n        .sub(this.mouseBeginPos)\n        .divide(this.stage.scale)\n        .multiplyScalar(-1);\n    let t = mouseDiff.add(this.windowBeginPos);\n    this.window.x = t.x;\n    this.window.y = t.y;\n    this.vel.copy(this.mouse.mouseInput).sub(this.mouseLastPos);\n    this.mouseLastPos.copy(this.mouse.mouseInput);\n    tmp.dispose();\n  }\n\n  onMoveRelease(){\n    this.vel.multiplyScalar(this.friction);\n\n    let v = this.vel.clone()\n        .divide(this.stage.scale)\n        .multiplyScalar(-1);\n\n    this.window.x += v.x;\n    this.window.y += v.y;\n\n    if(this.vel.getLength() < 0.01){\n      this.moveLoop.pause();\n    }\n    v.dispose();\n  }\n\n  enable(){\n    this.mouse.onDown.add(this.startDrag, this);\n    this.mouse.onUp.add(this.stopDrag, this);\n    this.mouse.mouseInput.setCursor(\"grab\");\n  }\n\n  disable(){\n    this.mouse.onDown.remove(this.startDrag, this);\n    this.mouse.onUp.remove(this.stopDrag, this);\n    this.mouse.onMove.remove(this.onDrag, this);\n    this.mouse.mouseInput.setCursor(\"default\");\n    this.moveLoop.pause();\n  }\n}\n", "export * from \"./CircleCenterPoint\";\nexport * from \"./LinePointPoint\";\nexport * from \"./DragPoint\";\nexport * from \"./DragStage\";\nexport * from \"./SelectOrCreatePoint\";\n", "import Signal from \"../utils/Signal\";\n\nexport class Tool{\n  constructor(stage, mouse, commandClass, description, icon){\n    this.stage = stage;\n    this.mouse = mouse;\n    this.commandClass = commandClass;\n    this.description = description;\n    this.icon = icon;\n    this.commandCompleted = new Signal();\n  }\n\n  enable(){\n    this.startCommand();\n  }\n\n  disable(){\n    this.currentCommand.disable();\n  }\n\n  startCommand(){\n    this.currentCommand = new this.commandClass(this.stage, this.mouse);\n    this.currentCommand.completed.add(this.onCommandComplete, this);\n    this.currentCommand.enable();\n  }\n\n  onCommandComplete(){\n    this.currentCommand.completed.remove(this.onCommandComplete, this);\n    this.commandCompleted.dispatch(this.currentCommand);\n    this.currentCommand.disable();\n    this.startCommand();\n  }\n\n  cancel(){\n    this.currentCommand.cancel();\n  }\n}\n", "export default class ToolsSelector{\n  constructor(tools){\n    this.domElement = document.createElement(\"ul\");\n    this.tools = tools;\n    this.onClickBind = this.onClick.bind(this);\n    this.setCurrentTool(this.tools[0]);\n  }\n\n  enable(){\n    this.domElement.addEventListener(\"click\", this.onClickBind);\n  }\n\n  disable(){\n    this.domElement.removeEventListener(\"click\", this.onClickBind);\n  }\n\n  buildList(){\n    this.tools.forEach((tool, i) => {\n      let container = document.createElement(\"li\");\n      this.domElement.appendChild(container);\n      let element = document.createElement(\"button\");\n      element.innerHTML = tool.description;\n      element.dataset.id = i;\n      container.appendChild(element);\n    });\n  }\n\n  onClick(evt){\n    let id = parseInt(evt.target.dataset.id);\n    this.setCurrentTool(this.tools[id]);\n  }\n\n  setCurrentTool(tool){\n    if(this.currentTool !== undefined){\n      this.currentTool.disable();\n    }\n    this.currentTool = tool;\n    this.currentTool.enable();\n  }\n}\n", "import * as maths from \"../maths\";\nimport * as api from \"../api\";\nimport {Stage} from \"./Stage\";\nimport Mouse from \"./Mouse\";\n\nimport * as commands from \"./commands\";\n\nimport {Tool} from \"./Tool\";\nimport ToolsSelector from \"./ToolsSelector\";\n\nexport default class CompleteGui{\n    constructor(props){\n        props = Object.assign({\n            updateCallback:() => {},\n            width:700,\n            height:700,\n            autoStart:true,\n            autoSize:true\n        }, props);\n\n        if(props.canvas === undefined){\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = props.width;\n            this.canvas.height = props.height;\n        }\n        else {\n            this.canvas = props.canvas;\n        }\n\n        this.updateCallback = props.updateCallback;\n\n        this.window = maths.Rectangle.makeArea(-1.2, 1.2, 1.2, -1.2)\n        this.stage = new Stage(this.canvas, {window:this.window.clone()});\n\n        this.mouseController = new Mouse(this.stage);\n        this.mouse = api.mouse(this.stage, this.mouseController);\n\n        let radius = api.scalar(10 / Math.abs(this.stage.scale.x));\n        this.mouseCircle = api.circle(this.mouse, radius);\n        this.mouseCircle.selectable = false;\n        this.stage.add(this.mouseCircle);\n\n\n        let selector = new ToolsSelector([\n            new Tool(this.stage, this.mouseController, commands.DragPoint, \"drag point\", \"icon\"),\n            new Tool(this.stage, this.mouseController, commands.LinePointPoint, \"create line\", \"icon\"),\n            new Tool(this.stage, this.mouseController, commands.CircleCenterPoint, \"create circle\", \"icon\"),\n            new Tool(this.stage, this.mouseController, commands.DragStage, \"drag\", \"icon\")\n        ]);\n        selector.buildList();\n        selector.enable();\n\n        this.domElement = document.createElement(\"div\");\n        this.domElement.appendChild(this.canvas);\n        this.domElement.appendChild(selector.domElement);\n\n        if(props.autoStart){\n            this.start();\n        }\n        if(props.autoSize){\n            this.autoSize();\n            window.onload = () => {\n                this.onAutoSize();\n                window.onload = null;\n            };\n        }\n    }\n\n    ranPt(){\n        return api.randomPoint(this.stage.window);\n    }\n\n    start(){\n        if(this.isPlaying){\n            return;\n        }\n        this.isPlaying = true;\n        this.update();\n    }\n\n    pause(){\n        this.isPlaying = false;\n    }\n\n    update(){\n        let timeStamp = Date.now();\n        this.updateCallback(timeStamp);\n        this.mouseCircle.radius.value = 10 / Math.abs(this.stage.scale.x);\n        let w = this.stage.window;\n        this.stage.clear();\n        this.stage.draw(timeStamp);\n        if(this.isPlaying){\n            requestAnimationFrame(this.update.bind(this));\n        }\n    }\n\n    autoSize(){\n        let ds = this.domElement.style;\n        let cs = this.canvas.style;\n        cs.width = ds.width = \"100%\";\n        cs.height = ds.height = \"100%\";\n        window.addEventListener(\"resize\", () => this.onAutoSize());\n    }\n\n    onAutoSize(){\n        this.resize(\n            this.domElement.clientWidth,\n            this.domElement.clientHeight\n        );\n    }\n\n    resize(w, h){\n        this.canvas.width = w;\n        this.canvas.height = h;\n        const stageRatio = w / h;\n        const windowRatio = Math.abs(this.window.width / this.window.height);\n        this.stage.window.copy(this.window);\n        let vw, vh;\n        if(stageRatio > windowRatio){\n            vw = this.window.width * stageRatio / windowRatio;\n            vh = this.window.height;\n        }\n        else{\n            vw = this.window.width;\n            vh = this.window.height / (stageRatio / windowRatio);\n        }\n        this.stage.window.set(\n            this.window.x + 0.5 * this.window.width - 0.5 * vw,\n            this.window.y + 0.5 * this.window.height - 0.5 * vh,\n            vw,\n            vh\n        );\n    }\n}\n", "import * as api from \"./api\";\nimport Gui from \"./gui/CompleteGui\";\n\nconst gui = new Gui();\ndocument.body.appendChild(gui.domElement);\n\nconst stage = gui.stage;\n\n// let t1 = gui.ranPt();\n// let t2 = gui.ranPt();\n// let t3 = gui.ranPt();\n// stage.add(t1, t2, t3);\n\n// let s1 = api.segment(t1, t2);\n// let s2 = api.segment(t1, t3);\n// let s3 = api.segment(t2, t3);\n// stage.add(s1, s2, s3);\n\n// let m1 = api.segmentBissector(s1);\n// let m2 = api.segmentBissector(s2);\n// let m3 = api.segmentBissector(s3);\n// stage.add(m1, m2, m3);\n\n// stage.add(\n//   api.middle(s1),\n//   api.middle(s2),\n//   api.middle(s3)\n// );\n\n// stage.add(api.linesIntersection(m1, m3));\n\n// let c = api.circumCircle(t1, t2, t3);\n// stage.add(c);\n\n\n// let c1 = api.circle(gui.ranPt(), gui.ranPt());\n// let inters = api.circlesIntersections(c1, c);\n// stage.add(c1, c, inters);\n\n// let pts = [];\n// let nPts = 30;\n// let w = stage.window;\n\n// for(let i = 0; i < nPts; i++){\n//   pts[i] = api.point(w.x + i / nPts * w.width, w.y + 0.5 * w.height);\n// }\n// let circles = pts.map((p, i) => {\n//   return i === 0 ? null : api.circle(p, pts[i - 1]);\n// });\n// let intersections = circles.map((c, i) => {\n//   return i < 2 ? null : api.circlesIntersections(c, circles[i - 1]);\n// });\n// let f = a => a.filter(o => o !== null);\n// stage.add(f(pts), f(circles), f(intersections));\n\n\n// stage.add(f(intersections).map(inter => api.segment(inter[0], inter[1])));\n\n// let origin = api.point(0, 0);\n// stage.add(api.vector(origin, api.point(1, 0)));\n// stage.add(api.vector(origin, api.point(0, 1)));\n\n\nlet p1 = gui.ranPt();\nlet p2 = gui.ranPt();\nlet ci = api.circle(p1, p2);\nstage.add(p1, p2, ci);\n\nlet pa = gui.ranPt();\nlet pb = gui.ranPt();\nlet pc = gui.ranPt();\nlet pd = gui.ranPt();\n\nlet sa = api.segment(pa, pb);\nlet sb = api.segment(pb, pc);\nlet sc = api.segment(pc, pd);\nlet sd = api.segment(pd, pa);\n\nlet ma = api.middle(sa);\nlet mb = api.middle(sb);\nlet mc = api.middle(sc);\nlet md = api.middle(sd);\n\nstage.add(pa, pb, pc, pd);\nstage.add(ma, mb, mc, md);\nstage.add(sa, sb, sc, sd);\n\nstage.add(api.polygon(ma, mb, mc, md));\n// gui.start(timeStamp => {\n//     pts.forEach((p, i) => p.geom.y = 0.1 * w.height * Math.cos(0.5 * i + 0.03 * timeStamp));\n// });\n\n\n// const pts = [];\n// for(let i = 0; i < 500; i++) pts.push(gui.ranPt())\n// stage.add(pts.map(pt => api.circle(pt, gui.mouse)));\n\ngui.start();\n"],
  "mappings": "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",
  "names": []
}
